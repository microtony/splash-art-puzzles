$puzzle-width-xs: 100%;
$puzzle-width-sm: 720px;
$puzzle-width-md: 940px;
$puzzle-width-lg: 1140px;

$levels: 0 3 2, 1 4 3, 2 5 3, 3 6 4, 
         4 7 4, 5 8 5, 6 9 5, 7 10 6;

#puzzle-wrapper:before {
  content: "";
  display: block;
}
#puzzle-wrapper {
  position: relative;
  width: 100%;
}
.puzzle-content {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0
}
#puzzle-main:not(.puzzle-finished) .puzzle-cell {
  //box-shadow: inset 0px 0px 1px 1px #111;
  z-index: 5;
}
#puzzle-main:not(.puzzle-finished) .puzzle-cell.movable {
  //box-shadow: inset 0px 0px 0px 2px rgba(255, 255, 192, 0.4);
  cursor: pointer;
}
@media (min-width: 720px) {
  #puzzle-main:not(.puzzle-finished) .puzzle-cell.movable:hover {
    filter: brightness(150%) contrast(80%);
  }
}
#hint:before {
  content: "";
  display: block;
}
#hint-wrapper {
  max-width: 400px;
  padding: 20px;
  margin: 0 auto;
  background-color: #000;
}
#hint {
  position: relative;
  padding-top: 59.0123456%;
  background-size: contain;
}
.hint-cell {
  border: 1.5px solid #000;
  position: absolute;
}
@each $level, $levelx, $levely in $levels {
  #puzzle-main[data-level="#{$level}"] {

    #puzzle-wrapper {
      padding-top: 59.031979256698%;
    }
    .puzzle-cell {
      position: absolute;
      width: 100% / $levelx;
      height: 100% / $levely;
      background-size: 100% * $levelx;
    }
    @for $i from 0 through $levely - 1 {
      @for $j from 0 through $levelx - 1 {
        .puzzle-cell[data-cell="#{$i * $levelx + $j}"] {
          background-position: (100% * $j / ($levelx - 1)) (100% * $i / ($levely - 1));
        }
      }
    }
    @for $i from 0 through $levely - 1 {
      @for $j from 0 through $levelx - 1 {
        .puzzle-cell[data-pos="#{$i * $levelx + $j}"] {
          top: 100% * $i / $levely;
          left: 100% * $j / $levelx;
        }
      }
    }
  }
  #hint[data-level="#{$level}"] {
    .hint-cell {
      width: 100% / $levelx;
      height: 100% / $levely;
    }
    @for $i from 0 through $levely - 1 {
      @for $j from 0 through $levelx - 1 {
        .hint-cell[data-cell="#{$i * $levelx + $j}"] {
          top: 100% * $i / $levely;
          left: 100% * $j / $levelx;
        }
      }
    }
    @for $i from $levelx * $levely through 59 {
      .hint-cell[data-cell="#{$i}"] {
        display: none;
      }
    }
    .hint-cell[data-cell="#{$levelx * ($levely - 1)}"] {
      background-color: rgba(30, 30, 30, 0.7);
    }
  }
}

@import "skins";

#puzzle-main > div {
  background-color: #131313;
}

#puzzle-main > div::after {
  background-size: cover;
  content: "";
  opacity: 0.20;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
  z-index: 1;
  filter: grayscale(50%) blur(5px);
}
@each $skin, $url in $skins {
  #puzzle-main[data-skin="#{$skin}"] > div::after, #puzzle-main[data-skin="#{$skin}"] .puzzle-cell, #hint[data-skin="#{$skin}"] {
    background-image: url($url);
  }
}

#champion-select {
  left: -160px;
  overflow: auto;
}
.champion-icon {
  width: 20px;
  height: 20px;
  margin: -1px 0;
}
@media (max-width: 479px) {
  #champion-select {
    max-height: 300px;
  }
}
@media (min-width: 480px) and (max-width: 719px) {
  #champion-select {
    -moz-column-count: 3;
    -webkit-column-count: 3;
    column-count: 3;
    max-height: 360px;
  }
}
@media (min-width: 720px) and (max-width: 959px) {
  #champion-select {
    -moz-column-count: 4;
    -webkit-column-count: 4;
    column-count: 4;
    max-height: 500px;
  }
}
@media (min-width: 960px) {
  #champion-select {
    -moz-column-count: 5;
    -webkit-column-count: 5;
    column-count: 5;
    max-height: 600px;
  }
}

@for $i from 0 through 7 {
  @for $j from 0 through $i {
    #navbar-collapse[data-unlocked="#{$i}"] li[data-level="#{$j}"] .level-lock {
      display: none;
    }
  }
  #navbar-collapse[data-unlocked="#{$i}"] #level-select li[data-level="#{$i}"] a {
    color: #FF0;
  }
  @for $j from $i + 1 through 7 {
    #navbar-collapse[data-unlocked="#{$i}"] li[data-level="#{$j}"] a {
      color: #999;
      cursor: not-allowed;
    }
  }
}

.badge[data-level="1"] {
  background-color: #099;
}
.badge[data-level="2"] {
  background-color: #0A4;
}
.badge[data-level="3"] {
  background-color: #5A0;
}
.badge[data-level="4"] {
  background-color: #990;
}
.badge[data-level="5"] {
  background-color: #A60;
}
.badge[data-level="6"] {
  background-color: #B00;
}
.badge[data-level="7"] {
  background-color: #A06;
}
.game-stat {
  text-align: center;
  font-size: 30px;
  color: #FFF;
}

@media (min-width: 720px) {
  .game-stat{
    margin-top: 15px;
  }
}

.game-stat-note {
  text-align: center;
  margin-bottom: 15px;
}

.game-footer {
  padding: 15px 0;
}

.game-stat-row {
  margin-bottom: 15px;
}

.legal {
  font-size: 13px;
  margin: 10px 0 20px 0;
  color: #999;
}

.how-to-play {
  margin-top: 15px;
}

#user-guest a {
  color: rgb(0, 204, 178);
}

#user-guest:hover a , #user-guest:active a, #user-guest:focus a {
  color: rgb(0, 230, 200);
}

.close2 {
  margin: -4px;
  padding: 6px 12px;
}

#unlock-error {
  color: #FF6666;
  margin-right: 30px;
}

#reward-result .modal-body {
  padding-left: 180px;
  background: url('/images/unlock.png');
  background-repeat: no-repeat;
  background-position: 20px 20px;
  min-height: 180px;
}

#reward-play {
  margin: 10px 0 20px 0;
}